{
	"id": "fa0686e37c35926ed8b21fce697ca8b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contract/Blacklist.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Blacklist {\r\n\r\n\r\n  mapping(address => bool) private _blacklist;\r\n\r\n  event Blacklisted(address indexed user);\r\n\r\n\r\n  event Unblacklisted(address indexed user);\r\n\r\n\r\n  function blacklist(address user) public {\r\n \r\n    require(!_blacklist[user], \"User is already blacklisted\");\r\n\r\n    _blacklist[user] = true;\r\n\r\n\r\n    emit Blacklisted(user);\r\n  }\r\n\r\n\r\n  function unblacklist(address user) public  {\r\n\r\n    require(_blacklist[user], \"User is not blacklisted\");\r\n\r\n\r\n    _blacklist[user] = false;\r\n\r\n\r\n    emit Unblacklisted(user);\r\n  }\r\n\r\n\r\n  function isBlacklisted(address user) public view returns (bool) {\r\n    return _blacklist[user];\r\n  }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contract/Blacklist.sol": {
				"Blacklist": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "Unblacklisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "unblacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contract/Blacklist.sol\":114:769  contract Blacklist {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract/Blacklist.sol\":114:769  contract Blacklist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75e3661e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contract/Blacklist.sol\":476:656  function unblacklist(address user) public  {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Contract/Blacklist.sol\":290:468  function blacklist(address user) public {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      tag_12\n      jump\t// in\n    tag_10:\n      stop\n        /* \"Contract/Blacklist.sol\":664:764  function isBlacklisted(address user) public view returns (bool) {... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/Blacklist.sol\":476:656  function unblacklist(address user) public  {... */\n    tag_9:\n        /* \"Contract/Blacklist.sol\":536:546  _blacklist */\n      0x00\n        /* \"Contract/Blacklist.sol\":536:552  _blacklist[user] */\n      dup1\n        /* \"Contract/Blacklist.sol\":547:551  user */\n      dup3\n        /* \"Contract/Blacklist.sol\":536:552  _blacklist[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contract/Blacklist.sol\":528:580  require(_blacklist[user], \"User is not blacklisted\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"Contract/Blacklist.sol\":610:615  false */\n      0x00\n        /* \"Contract/Blacklist.sol\":591:601  _blacklist */\n      dup1\n        /* \"Contract/Blacklist.sol\":591:607  _blacklist[user] */\n      0x00\n        /* \"Contract/Blacklist.sol\":602:606  user */\n      dup4\n        /* \"Contract/Blacklist.sol\":591:607  _blacklist[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contract/Blacklist.sol\":591:615  _blacklist[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contract/Blacklist.sol\":645:649  user */\n      dup1\n        /* \"Contract/Blacklist.sol\":631:650  Unblacklisted(user) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7534c63860313c46c473e4e98328f37017e9674e2162faf1a3ad7a96236c3b7b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contract/Blacklist.sol\":476:656  function unblacklist(address user) public  {... */\n      pop\n      jump\t// out\n        /* \"Contract/Blacklist.sol\":290:468  function blacklist(address user) public {... */\n    tag_12:\n        /* \"Contract/Blacklist.sol\":349:359  _blacklist */\n      0x00\n        /* \"Contract/Blacklist.sol\":349:365  _blacklist[user] */\n      dup1\n        /* \"Contract/Blacklist.sol\":360:364  user */\n      dup3\n        /* \"Contract/Blacklist.sol\":349:365  _blacklist[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contract/Blacklist.sol\":348:365  !_blacklist[user] */\n      iszero\n        /* \"Contract/Blacklist.sol\":340:397  require(!_blacklist[user], \"User is already blacklisted\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"Contract/Blacklist.sol\":425:429  true */\n      0x01\n        /* \"Contract/Blacklist.sol\":406:416  _blacklist */\n      0x00\n        /* \"Contract/Blacklist.sol\":406:422  _blacklist[user] */\n      dup1\n        /* \"Contract/Blacklist.sol\":417:421  user */\n      dup4\n        /* \"Contract/Blacklist.sol\":406:422  _blacklist[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contract/Blacklist.sol\":406:429  _blacklist[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contract/Blacklist.sol\":457:461  user */\n      dup1\n        /* \"Contract/Blacklist.sol\":445:462  Blacklisted(user) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contract/Blacklist.sol\":290:468  function blacklist(address user) public {... */\n      pop\n      jump\t// out\n        /* \"Contract/Blacklist.sol\":664:764  function isBlacklisted(address user) public view returns (bool) {... */\n    tag_15:\n        /* \"Contract/Blacklist.sol\":722:726  bool */\n      0x00\n        /* \"Contract/Blacklist.sol\":742:752  _blacklist */\n      dup1\n        /* \"Contract/Blacklist.sol\":742:758  _blacklist[user] */\n      0x00\n        /* \"Contract/Blacklist.sol\":753:757  user */\n      dup4\n        /* \"Contract/Blacklist.sol\":742:758  _blacklist[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contract/Blacklist.sol\":735:758  return _blacklist[user] */\n      swap1\n      pop\n        /* \"Contract/Blacklist.sol\":664:764  function isBlacklisted(address user) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_28:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_30:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_31:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_47\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_30\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_32:\n        /* \"#utility.yul\":641:665   */\n      tag_49\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_50:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_33:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_52\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_32\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_55\n      tag_28\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":917:1036   */\n    tag_54:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_56\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_33\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_34:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_35:\n        /* \"#utility.yul\":1353:1374   */\n      tag_59\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_17:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_61\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_35\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1772   */\n    tag_36:\n        /* \"#utility.yul\":1687:1698   */\n      0x00\n        /* \"#utility.yul\":1721:1727   */\n      dup3\n        /* \"#utility.yul\":1716:1719   */\n      dup3\n        /* \"#utility.yul\":1709:1728   */\n      mstore\n        /* \"#utility.yul\":1761:1765   */\n      0x20\n        /* \"#utility.yul\":1756:1759   */\n      dup3\n        /* \"#utility.yul\":1752:1766   */\n      add\n        /* \"#utility.yul\":1737:1766   */\n      swap1\n      pop\n        /* \"#utility.yul\":1603:1772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1778:1951   */\n    tag_37:\n        /* \"#utility.yul\":1918:1943   */\n      0x55736572206973206e6f7420626c61636b6c6973746564000000000000000000\n        /* \"#utility.yul\":1914:1915   */\n      0x00\n        /* \"#utility.yul\":1906:1912   */\n      dup3\n        /* \"#utility.yul\":1902:1916   */\n      add\n        /* \"#utility.yul\":1895:1944   */\n      mstore\n        /* \"#utility.yul\":1778:1951   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2323   */\n    tag_38:\n        /* \"#utility.yul\":2099:2102   */\n      0x00\n        /* \"#utility.yul\":2120:2187   */\n      tag_65\n        /* \"#utility.yul\":2184:2186   */\n      0x17\n        /* \"#utility.yul\":2179:2182   */\n      dup4\n        /* \"#utility.yul\":2120:2187   */\n      tag_36\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2113:2187   */\n      swap2\n      pop\n        /* \"#utility.yul\":2196:2289   */\n      tag_66\n        /* \"#utility.yul\":2285:2288   */\n      dup3\n        /* \"#utility.yul\":2196:2289   */\n      tag_37\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"#utility.yul\":2309:2312   */\n      dup3\n        /* \"#utility.yul\":2305:2317   */\n      add\n        /* \"#utility.yul\":2298:2317   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2748   */\n    tag_21:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2533:2535   */\n      0x20\n        /* \"#utility.yul\":2522:2531   */\n      dup3\n        /* \"#utility.yul\":2518:2536   */\n      add\n        /* \"#utility.yul\":2510:2536   */\n      swap1\n      pop\n        /* \"#utility.yul\":2582:2591   */\n      dup2\n        /* \"#utility.yul\":2576:2580   */\n      dup2\n        /* \"#utility.yul\":2572:2592   */\n      sub\n        /* \"#utility.yul\":2568:2569   */\n      0x00\n        /* \"#utility.yul\":2557:2566   */\n      dup4\n        /* \"#utility.yul\":2553:2570   */\n      add\n        /* \"#utility.yul\":2546:2593   */\n      mstore\n        /* \"#utility.yul\":2610:2741   */\n      tag_68\n        /* \"#utility.yul\":2736:2740   */\n      dup2\n        /* \"#utility.yul\":2610:2741   */\n      tag_38\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2602:2741   */\n      swap1\n      pop\n        /* \"#utility.yul\":2329:2748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2754:2931   */\n    tag_39:\n        /* \"#utility.yul\":2894:2923   */\n      0x5573657220697320616c726561647920626c61636b6c69737465640000000000\n        /* \"#utility.yul\":2890:2891   */\n      0x00\n        /* \"#utility.yul\":2882:2888   */\n      dup3\n        /* \"#utility.yul\":2878:2892   */\n      add\n        /* \"#utility.yul\":2871:2924   */\n      mstore\n        /* \"#utility.yul\":2754:2931   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2937:3303   */\n    tag_40:\n        /* \"#utility.yul\":3079:3082   */\n      0x00\n        /* \"#utility.yul\":3100:3167   */\n      tag_71\n        /* \"#utility.yul\":3164:3166   */\n      0x1b\n        /* \"#utility.yul\":3159:3162   */\n      dup4\n        /* \"#utility.yul\":3100:3167   */\n      tag_36\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":3093:3167   */\n      swap2\n      pop\n        /* \"#utility.yul\":3176:3269   */\n      tag_72\n        /* \"#utility.yul\":3265:3268   */\n      dup3\n        /* \"#utility.yul\":3176:3269   */\n      tag_39\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":3294:3296   */\n      0x20\n        /* \"#utility.yul\":3289:3292   */\n      dup3\n        /* \"#utility.yul\":3285:3297   */\n      add\n        /* \"#utility.yul\":3278:3297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2937:3303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3309:3728   */\n    tag_25:\n        /* \"#utility.yul\":3475:3479   */\n      0x00\n        /* \"#utility.yul\":3513:3515   */\n      0x20\n        /* \"#utility.yul\":3502:3511   */\n      dup3\n        /* \"#utility.yul\":3498:3516   */\n      add\n        /* \"#utility.yul\":3490:3516   */\n      swap1\n      pop\n        /* \"#utility.yul\":3562:3571   */\n      dup2\n        /* \"#utility.yul\":3556:3560   */\n      dup2\n        /* \"#utility.yul\":3552:3572   */\n      sub\n        /* \"#utility.yul\":3548:3549   */\n      0x00\n        /* \"#utility.yul\":3537:3546   */\n      dup4\n        /* \"#utility.yul\":3533:3550   */\n      add\n        /* \"#utility.yul\":3526:3573   */\n      mstore\n        /* \"#utility.yul\":3590:3721   */\n      tag_74\n        /* \"#utility.yul\":3716:3720   */\n      dup2\n        /* \"#utility.yul\":3590:3721   */\n      tag_40\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":3582:3721   */\n      swap1\n      pop\n        /* \"#utility.yul\":3309:3728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cd67cd7247979003bb2aecece403f4de707488209a8009d92af7aaf27314a4e264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506105128061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806375e3661e14610043578063f9f92be41461005f578063fe575a871461007b575b5f80fd5b61005d6004803603810190610058919061039e565b6100ab565b005b6100796004803603810190610074919061039e565b6101cc565b005b6100956004803603810190610090919061039e565b6102ef565b6040516100a291906103e3565b60405180910390f35b5f808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012a90610456565b60405180910390fd5b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f7534c63860313c46c473e4e98328f37017e9674e2162faf1a3ad7a96236c3b7b60405160405180910390a250565b5f808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024c906104be565b60405180910390fd5b60015f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b85560405160405180910390a250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61036d82610344565b9050919050565b61037d81610363565b8114610387575f80fd5b50565b5f8135905061039881610374565b92915050565b5f602082840312156103b3576103b2610340565b5b5f6103c08482850161038a565b91505092915050565b5f8115159050919050565b6103dd816103c9565b82525050565b5f6020820190506103f65f8301846103d4565b92915050565b5f82825260208201905092915050565b7f55736572206973206e6f7420626c61636b6c69737465640000000000000000005f82015250565b5f6104406017836103fc565b915061044b8261040c565b602082019050919050565b5f6020820190508181035f83015261046d81610434565b9050919050565b7f5573657220697320616c726561647920626c61636b6c697374656400000000005f82015250565b5f6104a8601b836103fc565b91506104b382610474565b602082019050919050565b5f6020820190508181035f8301526104d58161049c565b905091905056fea2646970667358221220cd67cd7247979003bb2aecece403f4de707488209a8009d92af7aaf27314a4e264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x512 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75E3661E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x7B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74 SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP1 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7534C63860313C46C473E4E98328F37017E9674E2162FAF1A3AD7A96236C3B7B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x255 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C SWAP1 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x36D DUP3 PUSH2 0x344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37D DUP2 PUSH2 0x363 JUMP JUMPDEST DUP2 EQ PUSH2 0x387 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x398 DUP2 PUSH2 0x374 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x340 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C0 DUP5 DUP3 DUP6 ADD PUSH2 0x38A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DD DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x3D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55736572206973206E6F7420626C61636B6C6973746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x440 PUSH1 0x17 DUP4 PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x44B DUP3 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x46D DUP2 PUSH2 0x434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5573657220697320616C726561647920626C61636B6C69737465640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4A8 PUSH1 0x1B DUP4 PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x4B3 DUP3 PUSH2 0x474 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4D5 DUP2 PUSH2 0x49C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH8 0xCD7247979003BB2A 0xEC 0xEC 0xE4 SUB DELEGATECALL 0xDE PUSH17 0x7488209A8009D92AF7AAF27314A4E26473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "114:655:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@blacklist_173": {
									"entryPoint": 460,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isBlacklisted_208": {
									"entryPoint": 751,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unblacklist_196": {
									"entryPoint": 171,
									"id": 196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3731:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:3",
														"type": ""
													}
												],
												"src": "1176:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:3",
														"type": ""
													}
												],
												"src": "1272:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:3",
														"type": ""
													}
												],
												"src": "1387:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1699:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1716:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1737:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1756:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1752:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1737:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1676:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1687:11:3",
														"type": ""
													}
												],
												"src": "1603:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1884:67:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1906:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1902:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1902:14:3"
																	},
																	{
																		"hexValue": "55736572206973206e6f7420626c61636b6c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1918:25:3",
																		"type": "",
																		"value": "User is not blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:49:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1895:49:3"
														}
													]
												},
												"name": "store_literal_in_memory_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1876:6:3",
														"type": ""
													}
												],
												"src": "1778:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2103:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2113:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2179:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2184:2:3",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2120:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2113:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2285:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c",
																	"nodeType": "YulIdentifier",
																	"src": "2196:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2196:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2309:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2091:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2099:3:3",
														"type": ""
													}
												],
												"src": "1957:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2500:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2510:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2522:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2533:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2518:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2510:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2557:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2568:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2576:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2582:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2546:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2602:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2736:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2610:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2602:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2480:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2495:4:3",
														"type": ""
													}
												],
												"src": "2329:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2860:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2882:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2890:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2878:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2878:14:3"
																	},
																	{
																		"hexValue": "5573657220697320616c726561647920626c61636b6c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2894:29:3",
																		"type": "",
																		"value": "User is already blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2871:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2871:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2852:6:3",
														"type": ""
													}
												],
												"src": "2754:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3083:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3093:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3164:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3100:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3265:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322",
																	"nodeType": "YulIdentifier",
																	"src": "3176:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3176:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3278:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3289:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3285:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3285:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3071:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3079:3:3",
														"type": ""
													}
												],
												"src": "2937:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3480:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3490:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3502:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3513:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3490:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3537:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3548:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3533:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3556:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3562:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3552:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3552:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3526:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3526:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3582:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3716:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3590:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3582:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3460:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3475:4:3",
														"type": ""
													}
												],
												"src": "3309:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c(memPtr) {\n\n        mstore(add(memPtr, 0), \"User is not blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322(memPtr) {\n\n        mstore(add(memPtr, 0), \"User is already blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806375e3661e14610043578063f9f92be41461005f578063fe575a871461007b575b5f80fd5b61005d6004803603810190610058919061039e565b6100ab565b005b6100796004803603810190610074919061039e565b6101cc565b005b6100956004803603810190610090919061039e565b6102ef565b6040516100a291906103e3565b60405180910390f35b5f808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012a90610456565b60405180910390fd5b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f7534c63860313c46c473e4e98328f37017e9674e2162faf1a3ad7a96236c3b7b60405160405180910390a250565b5f808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024c906104be565b60405180910390fd5b60015f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b85560405160405180910390a250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61036d82610344565b9050919050565b61037d81610363565b8114610387575f80fd5b50565b5f8135905061039881610374565b92915050565b5f602082840312156103b3576103b2610340565b5b5f6103c08482850161038a565b91505092915050565b5f8115159050919050565b6103dd816103c9565b82525050565b5f6020820190506103f65f8301846103d4565b92915050565b5f82825260208201905092915050565b7f55736572206973206e6f7420626c61636b6c69737465640000000000000000005f82015250565b5f6104406017836103fc565b915061044b8261040c565b602082019050919050565b5f6020820190508181035f83015261046d81610434565b9050919050565b7f5573657220697320616c726561647920626c61636b6c697374656400000000005f82015250565b5f6104a8601b836103fc565b91506104b382610474565b602082019050919050565b5f6020820190508181035f8301526104d58161049c565b905091905056fea2646970667358221220cd67cd7247979003bb2aecece403f4de707488209a8009d92af7aaf27314a4e264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75E3661E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x7B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74 SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP1 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7534C63860313C46C473E4E98328F37017E9674E2162FAF1A3AD7A96236C3B7B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x255 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C SWAP1 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x36D DUP3 PUSH2 0x344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37D DUP2 PUSH2 0x363 JUMP JUMPDEST DUP2 EQ PUSH2 0x387 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x398 DUP2 PUSH2 0x374 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x340 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C0 DUP5 DUP3 DUP6 ADD PUSH2 0x38A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DD DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x3D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55736572206973206E6F7420626C61636B6C6973746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x440 PUSH1 0x17 DUP4 PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x44B DUP3 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x46D DUP2 PUSH2 0x434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5573657220697320616C726561647920626C61636B6C69737465640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4A8 PUSH1 0x1B DUP4 PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x4B3 DUP3 PUSH2 0x474 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4D5 DUP2 PUSH2 0x49C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH8 0xCD7247979003BB2A 0xEC 0xEC 0xE4 SUB DELEGATECALL 0xDE PUSH17 0x7488209A8009D92AF7AAF27314A4E26473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "114:655:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;476:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;290:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;664:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;476:180;536:10;:16;547:4;536:16;;;;;;;;;;;;;;;;;;;;;;;;;528:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;610:5;591:10;:16;602:4;591:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;645:4;631:19;;;;;;;;;;;;476:180;:::o;290:178::-;349:10;:16;360:4;349:16;;;;;;;;;;;;;;;;;;;;;;;;;348:17;340:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;425:4;406:10;:16;417:4;406:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;457:4;445:17;;;;;;;;;;;;290:178;:::o;664:100::-;722:4;742:10;:16;753:4;742:16;;;;;;;;;;;;;;;;;;;;;;;;;735:23;;664:100;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:169::-;1687:11;1721:6;1716:3;1709:19;1761:4;1756:3;1752:14;1737:29;;1603:169;;;;:::o;1778:173::-;1918:25;1914:1;1906:6;1902:14;1895:49;1778:173;:::o;1957:366::-;2099:3;2120:67;2184:2;2179:3;2120:67;:::i;:::-;2113:74;;2196:93;2285:3;2196:93;:::i;:::-;2314:2;2309:3;2305:12;2298:19;;1957:366;;;:::o;2329:419::-;2495:4;2533:2;2522:9;2518:18;2510:26;;2582:9;2576:4;2572:20;2568:1;2557:9;2553:17;2546:47;2610:131;2736:4;2610:131;:::i;:::-;2602:139;;2329:419;;;:::o;2754:177::-;2894:29;2890:1;2882:6;2878:14;2871:53;2754:177;:::o;2937:366::-;3079:3;3100:67;3164:2;3159:3;3100:67;:::i;:::-;3093:74;;3176:93;3265:3;3176:93;:::i;:::-;3294:2;3289:3;3285:12;3278:19;;2937:366;;;:::o;3309:419::-;3475:4;3513:2;3502:9;3498:18;3490:26;;3562:9;3556:4;3552:20;3548:1;3537:9;3533:17;3526:47;3590:131;3716:4;3590:131;:::i;:::-;3582:139;;3309:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "259600",
								"executionCost": "298",
								"totalCost": "259898"
							},
							"external": {
								"blacklist(address)": "28207",
								"isBlacklisted(address)": "2892",
								"unblacklist(address)": "28181"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 769,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 114,
									"end": 769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd67cd7247979003bb2aecece403f4de707488209a8009d92af7aaf27314a4e264736f6c63430008140033",
									".code": [
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "75E3661E"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "F9F92BE4"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "FE575A87"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 114,
											"end": 769,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 476,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 476,
											"end": 656,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 476,
											"end": 656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 476,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 476,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 476,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 476,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 468,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 468,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 468,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 664,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 664,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 664,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 476,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 536,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 547,
											"end": 551,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 536,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 536,
											"end": 552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 528,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 528,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 528,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 610,
											"end": 615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 606,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 607,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 607,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 591,
											"end": 607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 591,
											"end": 607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 607,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 591,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 615,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 591,
											"end": 615,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 591,
											"end": 615,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 591,
											"end": 615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 649,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 631,
											"end": 650,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 2,
											"value": "7534C63860313C46C473E4E98328F37017E9674E2162FAF1A3AD7A96236C3B7B"
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 650,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 650,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 650,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 650,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 631,
											"end": 650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 650,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 349,
											"end": 359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 360,
											"end": 364,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 349,
											"end": 365,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 349,
											"end": 365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 340,
											"end": 397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 340,
											"end": 397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 340,
											"end": 397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 340,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 340,
											"end": 397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 340,
											"end": 397,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 340,
											"end": 397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 425,
											"end": 429,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 416,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 417,
											"end": 421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 422,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 406,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 429,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 429,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 406,
											"end": 429,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 406,
											"end": 429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 445,
											"end": 462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "FFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855"
										},
										{
											"begin": 445,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 462,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 462,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 462,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 462,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 664,
											"end": 764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 742,
											"end": 758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 742,
											"end": 758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 758,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 742,
											"end": 758,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 742,
											"end": 758,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 742,
											"end": 758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 735,
											"end": 758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 664,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1698,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1719,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1765,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1951,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1778,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1943,
											"name": "PUSH",
											"source": 3,
											"value": "55736572206973206E6F7420626C61636B6C6973746564000000000000000000"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2120,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2285,
											"end": 2288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2196,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2592,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2546,
											"end": 2593,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2610,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2602,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2602,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2931,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2754,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH",
											"source": 3,
											"value": "5573657220697320616C726561647920626C61636B6C69737465640000000000"
										},
										{
											"begin": 2890,
											"end": 2891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2924,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2937,
											"end": 3303,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3164,
											"end": 3166,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3100,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3100,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3100,
											"end": 3167,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3100,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3265,
											"end": 3268,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3176,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3269,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3176,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3292,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2937,
											"end": 3303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2937,
											"end": 3303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2937,
											"end": 3303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2937,
											"end": 3303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3728,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3309,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3515,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3552,
											"end": 3572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3546,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3526,
											"end": 3573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3716,
											"end": 3720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3721,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3590,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3582,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3582,
											"end": 3721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Contract/Blacklist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"blacklist(address)": "f9f92be4",
							"isBlacklisted(address)": "fe575a87",
							"unblacklist(address)": "75e3661e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Unblacklisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unblacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/Blacklist.sol\":\"Blacklist\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Contract/Blacklist.sol\":{\"keccak256\":\"0x6e6c8b04c465e59e8b64238883eefd1a5bd7b524504f087d9a4bd285b81fb8bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84f8105e3ec4b09751fd40ec54eddf80be694f08173b4954837f675237335325\",\"dweb:/ipfs/Qmb2RSJsEfnr9ZhGXCCRjEu2AGFAYKGJTuM5NPE8YoyNGF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 141,
								"contract": "Contract/Blacklist.sol:Blacklist",
								"label": "_blacklist",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Contract/Blacklist.sol": {
				"ast": {
					"absolutePath": "Contract/Blacklist.sol",
					"exportedSymbols": {
						"Blacklist": [
							209
						],
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 210,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 210,
							"sourceUnit": 113,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Blacklist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "Blacklist",
							"nameLocation": "123:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_blacklist",
									"nameLocation": "175:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "142:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 140,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 138,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "150:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "142:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 139,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "161:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855",
									"id": 145,
									"name": "Blacklisted",
									"nameLocation": "198:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "226:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "210:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:22:2"
									},
									"src": "192:40:2"
								},
								{
									"anonymous": false,
									"eventSelector": "7534c63860313c46c473e4e98328f37017e9674e2162faf1a3ad7a96236c3b7b",
									"id": 149,
									"name": "Unblacklisted",
									"nameLocation": "246:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "276:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "260:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "259:22:2"
									},
									"src": "240:42:2"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "330:138:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "348:17:2",
															"subExpression": {
																"baseExpression": {
																	"id": 155,
																	"name": "_blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "349:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 157,
																"indexExpression": {
																	"id": 156,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "360:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "349:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220697320616c726561647920626c61636b6c6973746564",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "367:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322",
																"typeString": "literal_string \"User is already blacklisted\""
															},
															"value": "User is already blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df55ccd59ff5f08b54da86c32976b25f56cce96d583ae68ab92d9eb505b4a322",
																"typeString": "literal_string \"User is already blacklisted\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "340:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "340:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "340:57:2"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 162,
															"name": "_blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "406:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 164,
														"indexExpression": {
															"id": 163,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "417:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "406:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "425:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "406:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "406:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 169,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "457:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 168,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "445:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "445:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "EmitStatement",
												"src": "440:22:2"
											}
										]
									},
									"functionSelector": "f9f92be4",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blacklist",
									"nameLocation": "299:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "317:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "309:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:14:2"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "330:0:2"
									},
									"scope": 209,
									"src": "290:178:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "519:137:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 179,
																"name": "_blacklist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "536:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 181,
															"indexExpression": {
																"id": 180,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "547:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "536:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206973206e6f7420626c61636b6c6973746564",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "554:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c",
																"typeString": "literal_string \"User is not blacklisted\""
															},
															"value": "User is not blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49ef817bfbf126541040892dc9b01ae748015f2ac3ff8a203364a9fed7366b6c",
																"typeString": "literal_string \"User is not blacklisted\""
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "528:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "528:52:2"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 185,
															"name": "_blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "591:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 187,
														"indexExpression": {
															"id": 186,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "591:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "591:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "591:24:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 192,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "645:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 191,
														"name": "Unblacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "631:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "EmitStatement",
												"src": "626:24:2"
											}
										]
									},
									"functionSelector": "75e3661e",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unblacklist",
									"nameLocation": "485:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "505:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "497:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:14:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "519:0:2"
									},
									"scope": 209,
									"src": "476:180:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "728:36:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 203,
														"name": "_blacklist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "742:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 205,
													"indexExpression": {
														"id": 204,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "753:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "742:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 202,
												"id": 206,
												"nodeType": "Return",
												"src": "735:23:2"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "673:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "695:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "687:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:14:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "722:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "722:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:6:2"
									},
									"scope": 209,
									"src": "664:100:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 210,
							"src": "114:655:2",
							"usedErrors": [],
							"usedEvents": [
								145,
								149
							]
						}
					],
					"src": "33:738:2"
				},
				"id": 2
			}
		}
	}
}